name: Regression
on:
    push:
    pull_request:
        branches: [master]
permissions:
    contents: read
    pages: write
    id-token: write
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [20.x]
        steps:
            - uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                node-version: ${{ matrix.node-version }}
                cache: 'npm'
                cache-dependency-path: 'react/package-lock.json'

            - name: Install Dependencies
              run: npm ci
              working-directory: ./react
            - name: Build
              run: npm run build
              working-directory: ./react
            - name: Upload built file
              uses: actions/upload-artifact@v4
              with:
                name: react-dist
                path: react/dist
    test:
        needs: build
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.12"]
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}
            - name: Download react built files
              uses: actions/download-artifact@v4
              with:
                name: react-dist
                path: react/dist
            - name: Set locale
              run: sudo locale-gen ja_JP.UTF-8

            - name: Install uv
              uses: astral-sh/setup-uv@v4
              with:
                version: "latest"

            - name: Cache uv dependencies
              uses: actions/cache@v4
              with:
                path: ~/.cache/uv
                key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock', 'pyproject.toml') }}
                restore-keys: |
                    ${{ runner.os }}-uv-

            - name: Install Dependencies
              run: uv sync --locked --no-editable

            - name: Install Playwright browsers
              run: uv run playwright install --with-deps

            - name: Run unit tests
              run: uv run pytest --cov-report=html --junit-xml=tests/evidence/junit.xml --numprocesses=auto tests/test_basic.py tests/test_error_handling.py

            - name: Start web server for integration tests
              run: |
                # Copy example config
                cp config.example.yaml config.yaml
                # Start web server in background
                uv run python src/webui.py -c config.yaml &
                echo $! > webserver.pid
                # Wait for server to start
                sleep 10
                # Check if server is running
                curl -f http://127.0.0.1:5000/unit_cooler/ || echo "Web server failed to start"
              continue-on-error: true

            - name: Run Playwright integration tests
              run: uv run pytest tests/test_playwright.py
              continue-on-error: true

            - name: Stop web server
              run: |
                if [ -f webserver.pid ]; then
                  kill $(cat webserver.pid) || true
                  rm webserver.pid
                fi
              if: always()

            - name: Upload test results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: test-results
                path: tests/evidence

            - name: Upload coverage artifact for GitHub Pages
              uses: actions/upload-pages-artifact@v3
              if: github.ref == 'refs/heads/master'
              with:
                path: tests/evidence
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/master'
        steps:
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
