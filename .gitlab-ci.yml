image: docker:23.0

stages:
  - build
  - test
  - deploy

build-image:
  stage: build
  image: registry.green-rabbit.net:5000/kimata/ubuntu-docker-build:d386d462

  variables:
    BUILDER: arm_builder
  
  script:
    # - docker rm $(docker ps -a --filter 'status=exited' -q) || true
    - export GIT_SSL_NO_VERIFY=1
    - git clone https://gitlab.green-rabbit.net/kimata/hems_config.git
    - mv hems_config/unit_cooler.yaml config.yaml
    # - docker pull ${CI_REGISTRY_IMAGE} || true
    # - docker build . -t ${CI_REGISTRY_IMAGE}
    - docker buildx create --name ${BUILDER} --config script/buildkitd.toml --use
    - docker buildx use ${BUILDER}
    - docker buildx build --platform linux/amd64,linux/arm64/v8 
          --cache-from type=registry,ref=${CI_REGISTRY_IMAGE}:cache 
          --cache-to type=registry,ref=${CI_REGISTRY_IMAGE}:cache 
          --push --tag ${CI_REGISTRY_IMAGE} .

test-controller-sample:
  stage: test

  script:
    - docker pull ${CI_REGISTRY_IMAGE}
    - docker run -t --label job=${CI_JOB_NAME} ${CI_REGISTRY_IMAGE} app/cooler_controller.py -c config.example.yaml -O

test-controller-regular:
  stage: test

  script:
    - docker pull ${CI_REGISTRY_IMAGE}
    - docker run -t --label job=${CI_JOB_NAME} ${CI_REGISTRY_IMAGE} app/cooler_controller.py -O

test-actuator-sample:
  stage: test
  
  variables:
    SERVER_HOST: 192.168.0.20

  script:
    - docker pull ${CI_REGISTRY_IMAGE}
    - docker run -t --label job=${CI_JOB_NAME} ${CI_REGISTRY_IMAGE} app/unit_cooler.py -c config.example.yaml -s ${SERVER_HOST} -O -D
    
test-actuator-regular:
  stage: test
  variables:
    SERVER_HOST: 192.168.0.20

  script:
    - docker pull ${CI_REGISTRY_IMAGE}
    - docker run -t --label job=${CI_JOB_NAME} ${CI_REGISTRY_IMAGE} app/unit_cooler.py -s ${SERVER_HOST} -O -D

deploy-controller:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context kimata/outdoor_unit_cooler:pod-rollout
    - kubectl --insecure-skip-tls-verify=true rollout restart -n hems deployment unit-cooler-controller
  rules:
    - changes:
        - app/cooler_controller.py
        - lib/config.py
        - lib/control_pubsub.py
        - lib/logger.py
        - lib/notify_slack.py
        - lib/sensor_data.py

deploy-actuator:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - kubectl config get-contexts
    - kubectl config use-context kimata/outdoor_unit_cooler:pod-rollout
    - kubectl --insecure-skip-tls-verify=true rollout restart -n hems deployment unit-cooler-actuator
  rules:
    - changes:
        - app/unit_cooler.py
        - app/aircon.py
        - app/config.py
        - app/control_pubsub.py
        - app/fd_q10c.py
        - app/io_link.py
        - app/logger.py
        - app/ltc2874.py
        - app/notify_slack.py
        - app/sensor_data.py
        - app/valve.py

    
