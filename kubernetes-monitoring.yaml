# Kubernetes環境用監視サイドカー設定
# 既存のunit-coolerシステムに影響を与えない監視機能

apiVersion: apps/v1
kind: Deployment
metadata:
    name: unit-cooler-with-monitoring
    namespace: hems
    labels:
        app: unit-cooler
        component: monitoring
spec:
    replicas: 1
    selector:
        matchLabels:
            app: unit-cooler
    template:
        metadata:
            labels:
                app: unit-cooler
        spec:
            serviceAccountName: unit-cooler-monitoring # 監視用ServiceAccount

            containers:
                # 既存のunit-coolerコンテナ（変更なし）
                - name: unit-cooler
                  image: registry.green-rabbit.net:5000/kimata/outdoor_unit_cooler:latest
                  # ... 既存の設定をそのまま維持 ...
                  ports:
                      - containerPort: 2222
                        name: http
                  volumeMounts:
                      - name: dev-shm
                        mountPath: /dev/shm
                  resources:
                      requests:
                          memory: 256Mi
                          cpu: 100m
                      limits:
                          memory: 512Mi
                          cpu: 500m
                  livenessProbe:
                      exec:
                          command:
                              ["/opt/unit_cooler/src/healthz.py", "-m", "CTRL"]
                      initialDelaySeconds: 120
                      periodSeconds: 120
                      timeoutSeconds: 30

                # 新しく追加する監視サイドカーコンテナ
                - name: monitoring-sidecar
                  image: registry.green-rabbit.net:5000/kimata/unit-cooler-monitoring:latest
                  ports:
                      - containerPort: 8081
                        name: metrics
                  env:
                      - name: KUBERNETES_NAMESPACE
                        valueFrom:
                            fieldRef:
                                fieldPath: metadata.namespace
                      - name: KUBERNETES_SERVICE_HOST
                        value: "kubernetes.default.svc.cluster.local"
                      - name: MONITORING_INTERVAL
                        value: "60"
                      - name: LOG_LEVEL
                        value: "INFO"
                  volumeMounts:
                      - name: shared-data
                        mountPath: /tmp/unit_cooler_monitoring
                      - name: dev-shm
                        mountPath: /dev/shm
                        readOnly: true
                  resources:
                      requests:
                          memory: 64Mi
                          cpu: 50m
                      limits:
                          memory: 128Mi
                          cpu: 100m
                  livenessProbe:
                      httpGet:
                          path: /health
                          port: 8081
                      initialDelaySeconds: 30
                      periodSeconds: 60
                  readinessProbe:
                      exec:
                          command:
                              [
                                  "test",
                                  "-f",
                                  "/tmp/unit_cooler_monitoring/metrics.json",
                              ]
                      initialDelaySeconds: 10
                      periodSeconds: 30

            volumes:
                - name: shared-data
                  emptyDir: {}
                - name: dev-shm
                  hostPath:
                      path: /dev/shm

---
# 監視用ServiceAccount（kubectl logs権限付き）
apiVersion: v1
kind: ServiceAccount
metadata:
    name: unit-cooler-monitoring
    namespace: hems

---
# kubectl logs実行用のClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: unit-cooler-log-reader
rules:
    - apiGroups: [""]
      resources: ["pods", "pods/log"]
      verbs: ["get", "list"]
    - apiGroups: ["apps"]
      resources: ["deployments", "replicasets"]
      verbs: ["get", "list"]

---
# ServiceAccountにClusterRoleをバインド
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: unit-cooler-log-reader-binding
subjects:
    - kind: ServiceAccount
      name: unit-cooler-monitoring
      namespace: hems
roleRef:
    kind: ClusterRole
    name: unit-cooler-log-reader
    apiGroup: rbac.authorization.k8s.io

---
# 監視メトリクス公開用Service
apiVersion: v1
kind: Service
metadata:
    name: unit-cooler-monitoring
    namespace: hems
    labels:
        app: unit-cooler
        component: monitoring
spec:
    selector:
        app: unit-cooler
    ports:
        - port: 8081
          targetPort: 8081
          name: metrics
    type: ClusterIP

---
# Prometheus用ServiceMonitor（Prometheus Operatorを使用している場合）
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
    name: unit-cooler-monitoring
    namespace: hems
    labels:
        app: unit-cooler
spec:
    selector:
        matchLabels:
            app: unit-cooler
            component: monitoring
    endpoints:
        - port: metrics
          path: /metrics/prometheus
          interval: 60s
          scrapeTimeout: 30s

---
# メトリクス外部公開用Ingress（オプション）
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: unit-cooler-monitoring-ingress
    namespace: hems
    annotations:
        nginx.ingress.kubernetes.io/auth-type: basic
        nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
        nginx.ingress.kubernetes.io/auth-realm: "Unit Cooler Monitoring"
spec:
    rules:
        - host: unit-cooler-monitoring.kubernetes.green-rabbit.net
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: unit-cooler-monitoring
                            port:
                                number: 8081
